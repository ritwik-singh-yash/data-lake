{
	"Description": "Creating Lambda,api gateway,Cognito,uploading properties file to s3",
	"AWSTemplateFormatVersion": "2010-09-09",

	
	"Resources": {			
			"AuthRoleForIdentity": {
			"Type": "AWS::IAM::Role",
			"DependsOn": "IdentityPool",
			"Properties": {
				"AssumeRolePolicyDocument":{
				"Version": "2012-10-17",
				"Statement": [
					{
						"Sid": "",
						"Effect": "Allow",
						"Principal": {
						"Federated": "cognito-identity.amazonaws.com"
					},
					"Action": "sts:AssumeRoleWithWebIdentity",
					"Condition": {
					"StringEquals": {
						"cognito-identity.amazonaws.com:aud": {"Ref":"IdentityPool"}
					},
					"ForAnyValue:StringLike": {
					"cognito-identity.amazonaws.com:amr": "authenticated"
					}
					}
				}
				]
			},
				"Path": "/",
				"Policies": [{
					"PolicyName": "identitypoolaccesspolicy",
					"PolicyDocument": {
						"Version": "2012-10-17",
						"Statement": [{
							"Effect": "Allow",
							"Action": [
								"glue:*",
								"redshift:DescribeClusters",
								"redshift:DescribeClusterSubnetGroups",
								"iam:ListRoles",
								"iam:ListRolePolicies",
								"iam:GetRole",
								"iam:GetRolePolicy",
								"iam:ListAttachedRolePolicies",								
								"s3:ListAllMyBuckets",
								"s3:ListBucket",
								"s3:GetBucketAcl",
								"cloudformation:DescribeStacks",
								"cloudformation:GetTemplateSummary"
							],
							"Resource": [
								"*"
							]
						},
						{
							"Effect": "Allow",
							"Action": [
							"s3:GetObject",
							"s3:PutObject"
							],
							"Resource": [
							"arn:aws:s3:::aws-glue-*/*",
							"arn:aws:s3:::*/*aws-glue-*/*",
							"arn:aws:s3:::aws-glue-*"
							]
						},
						{
							"Effect": "Allow",
							"Action": [
							"s3:CreateBucket"
							],
							"Resource": [
							"arn:aws:s3:::aws-glue-*"
							]
						},
						{
							"Effect": "Allow",
							"Action": [
							"logs:GetLogEvents"
							],
							"Resource": [
							"arn:aws:logs:*:*:/aws-glue/*"
							]
						},
						{
							"Effect": "Allow",
							"Action": [
							"cloudformation:CreateStack",
							"cloudformation:DeleteStack"
							],
							"Resource": "arn:aws:cloudformation:*:*:stack/aws-glue*/*"
						},						
						{
							"Action": [
							"iam:PassRole"
							],
							"Effect": "Allow",
							"Resource": "arn:aws:iam::*:role/AWSGlueServiceRole*",
							"Condition": {
							"StringLike": {
								"iam:PassedToService": [
								"glue.amazonaws.com"
							]
							}
							}
						},
						{
							"Action": [
							"iam:PassRole"
							],
							"Effect": "Allow",
							"Resource": "arn:aws:iam::*:role/AWSGlueServiceNotebookRole*",
							"Condition": {
							"StringLike": {
							"iam:PassedToService": [
								"ec2.amazonaws.com"
								]
							}
							}
						},
						{
							"Action": [
							"iam:PassRole"
							],
							"Effect": "Allow",
							"Resource": "arn:aws:iam::*:role/service-role/AWSGlueServiceRole*",
							"Condition": {
							"StringLike": {
							"iam:PassedToService": [
								"glue.amazonaws.com"
							]
							}
							}
						},
						{
							"Action": [
							"kinesis:DescribeStream",
							"kinesis:PutRecord",
							"kinesis:PutRecords"
							],
							"Resource": [
							"arn:aws:kinesis:*:*:stream/*"
							],
							"Effect": "Allow"
						},
						{
							"Action": [
							"firehose:DescribeDeliveryStream",
							"firehose:PutRecord",
							"firehose:PutRecordBatch"
							],
							"Resource": [
							"arn:aws:firehose:*:*:deliverystream/*"
							],
							"Effect": "Allow"
						},
						{
							"Action": [
							"mobileanalytics:PutEvents",
							"cognito-sync:*",
							"cognito-identity:*",
							"ec2:DescribeRegions",
							"firehose:ListDeliveryStreams",
							"kinesis:ListStreams"
							],
							"Resource": [
								"*"
							],
							"Effect": "Allow"
						},
						{
							"Effect": "Allow",
							"Action": [
							"cognito-identity:*",
							"cognito-idp:*",
							"cognito-sync:*",
							"iam:ListRoles",
							"iam:ListOpenIdConnectProviders",
							"sns:ListPlatformApplications"
							],
							"Resource": "*"
						},
						{
							"Effect": "Allow",
							"Action": "kinesisanalytics:*",
							"Resource": "*"
						},
						{
							"Effect": "Allow",
							"Action": [
							"kinesis:CreateStream",
							"kinesis:DeleteStream",
							"kinesis:DescribeStream",
							"kinesis:ListStreams",
							"kinesis:PutRecord",
							"kinesis:PutRecords"
							],
							"Resource": "*"
						},
						{
							"Effect": "Allow",
							"Action": [
								"firehose:DescribeDeliveryStream",
								"firehose:ListDeliveryStreams"
							],
							"Resource": "*"
						},
						{
							"Effect": "Allow",
							"Action": [
								"cloudwatch:GetMetricStatistics",
								"cloudwatch:ListMetrics"
							],
							"Resource": "*"
						},
						{
							"Effect": "Allow",
							"Action": "logs:GetLogEvents",
							"Resource": "*"
						},
						{
							"Effect": "Allow",
							"Action": [
								"iam:ListPolicyVersions",
								"iam:ListRoles"
							],
							"Resource": "*"
						},
						{
							"Effect": "Allow",
							"Action": "iam:PassRole",
							"Resource": "arn:aws:iam::*:role/service-role/kinesis-analytics*"
						}
						
						]
					}
				}],
				"RoleName": "GlueAuthenticationRole"	
						
			}
		},	
		"QuicksightDeliveryPolicy": {
			"DependsOn":"AuthRoleForIdentity",
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "QuicksightPolicy",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": [
								"ds:DescribeTrusts",
								"quicksight:GetGroupMapping",
								"quicksight:SearchDirectoryGroups",
								"quicksight:SetGroupMapping",
								"quicksight:CreateUser",
								"quicksight:CreateAdmin",
								"quicksight:Subscribe",
								"ds:AuthorizeApplication",
								"ds:CheckAlias",
								"ds:CreateAlias",
								"ds:CreateIdentityPoolDirectory",
								"ds:DeleteDirectory",
								"ds:DescribeDirectories",
								"ds:DescribeTrusts",
								"ds:UnauthorizeApplication",
								"iam:AttachRolePolicy",
								"iam:CreatePolicy",
								"iam:CreatePolicyVersion",
								"iam:CreateRole",
								"quicksight:Unsubscribe"
							],
							"Resource": {
							                    "Fn::Join": [
												"",
												[
														"arn:aws:quicksight::",
														
												{
													"Ref": "AWS::AccountId"
												},
												":user/${aws:userid}"
											]
										]}
							

						}
					
					
					]
				},
				"Roles":["GlueAuthenticationRole"] 
			}
		},		
		"UserPoolCientApp": {
			"Type": "AWS::Cognito::UserPoolClient",
			"Properties": {
				"ClientName": "quickstartusepoolclient",
				"GenerateSecret": false,
				"UserPoolId": {
					"Ref": "UserPool"
				}
			},
			"DependsOn": [
				"UserPool"
			]
		},
		"UserPool": {
			"Type": "AWS::Cognito::UserPool",
			"Properties": {
				"UserPoolName": "quickstartuserpool",
				"AutoVerifiedAttributes": [
					"email"
				]
			}
		},
		"IdentityPool": {
            "Type": "AWS::Cognito::IdentityPool",
			"Properties": {
				"IdentityPoolName": "quickstartidentitypool",
				"AllowUnauthenticatedIdentities": true, 
				"CognitoIdentityProviders":[{
					"ClientId" : {
							"Ref": "UserPoolCientApp"
						},
					"ProviderName" : {"Fn::GetAtt": [
							"UserPool",
							"ProviderName"
							]
						}
				
				}]
			}

		},
		"IdentityPoolRoles":{
		"Type" : "AWS::Cognito::IdentityPoolRoleAttachment",
		"Properties" : {
			"IdentityPoolId" : {"Ref":"IdentityPool"},
			"Roles" :  {"authenticated": {"Fn::GetAtt" : ["AuthRoleForIdentity", "Arn"] } }
						
					} 
		}
	},	
	"Outputs": {
		"UserPoolId": {
			"Value": {
				"Ref": "UserPool"
			},
			"Description": "USER POOL ID "
		},
		"UserPoolClient": {
			"Value": {
				"Ref": "UserPoolCientApp"
			},
			"Description": "USER POOL CLIENT ID "
		},
		"UserPoolARN": {
			"Value": {
				"Fn::GetAtt": ["UserPool", "Arn"]
			},
			"Description": "ARN of USERPOOL"
		},
		"UserPoolName": {
			"Value": {
				"Ref": "UserPool"
			},
			"Description": "Name of USERPOOL"
		},
		"IdentityPoolId":{
				"Value":{
					"Ref": "IdentityPool"
				},
			"Description":"IdentityPool Id"
		},
		"UserPoolProviderName":{
				"Value":{"Fn::GetAtt": ["UserPool","ProviderName"]},
				"Description":"User Pool Provider Name"
		}
	}
}