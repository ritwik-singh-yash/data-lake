{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Data Lake Foundation is a QuickStart that provides a Data Lake architecture, Redshift cluster, Elasticsearch domain, Data Lake walk-through wizard running on AWS EC2 instance, in the same VPC through Cloudformation templates that provision and configure the required resources, including related QuickStarts. This template provisions all of the resources that are specific to the Quick Start.  Leveraged Quick Starts (VPC, LinuxBastion), if needed, can be provisioned by using the data-lake-foundation-master template. **WARNING** You will be billed for the AWS resources used if you create a stack from this template.(qs-1nlkhq1o3)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "VPCCIDR",
                        "PrivateSubnet1ID",
                        "PrivateSubnet2ID",
                        "PublicSubnet1ID",
                        "PublicSubnet2ID"
                    ]
                },
                {
                    "Label": {
                        "default": "Redshift Configuration"
                    },
                    "Parameters": [
                        "RedshiftUsername",
                        "RedshiftPassword",
                        "RedshiftNumberOfNodes",
                        "RedshiftNodeType",
                        "RedshiftDatabaseName",
                        "RedshiftDatabasePort"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix",
                        "KeyPairName"
                    ]
                },
                {
                    "Label": {
                        "default": "Cognito Configuration"
                    },
                    "Parameters": [
                        "CognitoUserPoolName",
                        "CognitoUserPoolClientName",
                        "CognitoIdentityPoolName"
                    ]
                }
            ],
            "ParameterLabels": {
                "CognitoUserPoolName": {
                    "default": "Cognito User Pool Name"
                },
                "CognitoUserPoolClientName": {
                    "default": "Cognito User Pool Client Name"
                },
                "CognitoIdentityPoolName": {
                    "default": "Cognito Identity Pool Name"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "RedshiftUsername": {
                    "default": "Redshift User Name"
                },
                "RedshiftPassword": {
                    "default": "Redshift Password"
                },
                "RedshiftNumberOfNodes": {
                    "default": "Redshift Number of Nodes"
                },
                "RedshiftNodeType": {
                    "default": "Redshift Node Type"
                },
                "RedshiftDatabaseName": {
                    "default": "Redshift Database Name"
                },
                "RedshiftDatabasePort": {
                    "default": "Redshift Database Port"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "PrivateSubnet1ID": {
                    "default": "Existing VPC Private Subnet 1 ID"
                },
                "PrivateSubnet2ID": {
                    "default": "Existing VPC Private Subnet 2 ID"
                },
                "PublicSubnet1ID": {
                    "default": "Existing VPC Public Subnet 1 ID"
                },
                "PublicSubnet2ID": {
                    "default": "Existing VPC Public Subnet 2 ID"
                },
                "VPCID": {
                    "default": "Existing VPC ID"
                },
                "VPCCIDR": {
                    "default": "Existing VPC CIDR"
                }
            }
        }
    },
    "Parameters": {
        "PrivateSubnet1ID": {
            "Description": "ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PrivateSubnet2ID": {
            "Description": "ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet1ID": {
            "Description": "ID of the public subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet2ID": {
            "Description": "ID of the public subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "RedshiftDatabaseName": {
            "AllowedPattern": "([a-z]|[0-9])+",
            "ConstraintDescription": "must contain a-z or 0-9 only.",
            "Default": "quickstart",
            "Description": "The name of the first database to be created when the Amazon Redshift cluster is provisioned.",
            "Type": "String"
        },
        "RedshiftDatabasePort": {
            "Default": "5439",
            "Description": "The port that Amazon Redshift will listen on, which will be allowed through the security group.",
            "Type": "String"
        },
        "RedshiftNodeType": {
            "AllowedValues": [
                "dw1.xlarge",
                "dw1.8xlarge",
                "dw2.large",
                "dw2.8xlarge",
                "dc1.large",
                "dc1.8xlarge",
                "ds1.xlarge",
                "ds1.8xlarge",
                "ds2.xlarge",
                "ds2.8xlarge"
            ],
            "ConstraintDescription": "must be a valid Redshift node type.",
            "Default": "dc1.large",
            "Description": "Instance type for the nodes in the Amazon Redshift cluster.",
            "Type": "String"
        },
        "RedshiftNumberOfNodes": {
            "Default": "1",
            "Description": "The number of nodes in the Amazon Redshift cluster. If you specify a number that’s larger than 1, the Quick Start will launch a multi-node cluster.",
            "Type": "Number"
        },
        "RedshiftPassword": {
            "AllowedPattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])[A-Za-z0-9!#$%&()*+,.:;<=>?\\[\\]^_`{|}~-]*$",
            "ConstraintDescription": "Password must contain 8 to 64 printable ASCII characters excluding: /, \", \\', \\ and @. It must contain 1 uppercase letter, 1 lowercase letter, and 1 number.",
            "Description": "The password that is associated with the master user account for the Amazon Redshift cluster. The password must contain 8 to 64 printable ASCII characters, excluding: /, \", \\', \\ and @. It must contain one uppercase letter, one lowercase letter, and one number.",
            "MaxLength": "64",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "RedshiftUsername": {
            "AllowedPattern": "^[a-z][a-z0-9_]*$",
            "ConstraintDescription": "User name parameter must be lowercase, begin with a letter, contain only alphanumeric characters or underscores, and be less than 128 characters.",
            "Default": "datalake",
            "Description": "The user name that is associated with the master user account for the Amazon Redshift cluster. The user name must contain fewer than 128 alphanumeric characters or underscores, and must be lowercase and begin with a letter. ",
            "MaxLength": "128",
            "MinLength": "1",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for the VPC.",
            "Type": "String"
        },
        "VPCID": {
            "Description": "ID of your existing VPC (e.g., vpc-0343606e).",
            "Type": "AWS::EC2::VPC::Id"
        },
        "CognitoUserPoolName": {
            "Description": "the user pool name for congito.",
            "Type": "String"
        },
        "CognitoUserPoolClientName": {
            "Description": "the user pool name for congito.",
            "Type": "String"
        },
        "CognitoIdentityPoolName": {
            "Description": "Elastic IP address for the second NAT gateway instance that will be allowed access to Amazon ES.",
            "Type": "String"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "sa-devops",
            "Description": "S3 bucket where the Quick Start templates and scripts are installed. Use this parameter to specify the S3 bucket name you’ve created for your copy of Quick Start assets, if you decide to customize or extend the Quick Start for your own use. The bucket name can include numbers, lowercase letters, uppercase letters, and hyphens, but should not start or end with a hyphen.",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "datalake-ritwik",
            "Description": "S3 key prefix used to simulate a folder for your copy of Quick Start assets, if you decide to customize or extend the Quick Start for your own use. This prefix can include numbers, lowercase letters, uppercase letters, hyphens, and forward slashes.",
            "Type": "String"
        },
        "PubliclyAccessible": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "false",
            "Description": "Indicates whether the cluster can be accessed from a public network.",
            "Type": "String"
        },
        "RawBucket": {
            "Type": "String"
        },
        "TransformedDatasets": {
            "Type": "String"
        },
        "PublishedData": {
            "Type": "String"
        },
        "LogsBucket": {
            "Type": "String"
        },
        "ReferenceDataSourceFileKey": {
            "Type": "String"
        },
        "KinesisApplication1Name": {
            "Description": "Enter Application  Name 1",
            "Type": "String"
        },
        "KinesisApplication2Name": {
            "Description": "Enter Application  Name 2",
            "Type": "String"
        },
        "Firehose1Name": {
            "Description": "Enter Bucket Name for Firehose1 storing data",
            "Type": "String"
        },
        "Firehose2Name": {
            "Description": "Enter Bucket Name for Firehose2 storing data",
            "Type": "String"
        },
        "Firehose3Name": {
            "Description": "Enter Bucket Name for Firehose3 storing data",
            "Type": "String"
        },
        "Firehose4Name": {
            "Description": "Enter Bucket Name for Firehose4 storing data",
            "Type": "String"
        },
        "Firehose5Name": {
            "Description": "Enter Bucket Name for Firehose4 storing data",
            "Type": "String"
        },
        "ElasticSearchDomianARN": {
            "Description": "Domian ARN of ES",
            "Type": "String"
        }
    },
    "Conditions": {
        "RedshiftPubliclyAccessible": {
            "Fn::Equals": [
                {
                    "Ref": "PubliclyAccessible"
                },
                "true"
            ]
        }
    },
    "Resources": {
        "IAMRolesStack": {
            "Properties": {
                "Parameters": {
                    "TransformedDatasets": {
                        "Ref": "TransformedDatasets"
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/iam.json"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "RedshiftStack": {
            "DependsOn": [],
            "Properties": {
                "Parameters": {
                    "DatabaseName": {
                        "Ref": "RedshiftDatabaseName"
                    },
                    "DatabasePort": {
                        "Ref": "RedshiftDatabasePort"
                    },
                    "NodeType": {
                        "Ref": "RedshiftNodeType"
                    },
                    "NumberOfNodes": {
                        "Ref": "RedshiftNumberOfNodes"
                    },
                    "PubliclyAccessible": {
                        "Fn::If": [
                            "RedshiftPubliclyAccessible",
                            "true",
                            "false"
                        ]
                    },
                    "RedshiftRoleARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.RedshiftRoleARN"
                        ]
                    },
                    "RedshiftInboundCIDR": {
                        "Ref": "VPCCIDR"
                    },
                    "RedshiftPassword": {
                        "Ref": "RedshiftPassword"
                    },
                    "RedshiftUsername": {
                        "Ref": "RedshiftUsername"
                    },
                    "SubnetId1": {
                        "Fn::If": [
                            "RedshiftPubliclyAccessible",
                            {
                                "Ref": "PublicSubnet1ID"
                            },
                            {
                                "Ref": "PrivateSubnet1ID"
                            }
                        ]
                    },
                    "SubnetId2": {
                        "Fn::If": [
                            "RedshiftPubliclyAccessible",
                            {
                                "Ref": "PublicSubnet2ID"
                            },
                            {
                                "Ref": "PrivateSubnet2ID"
                            }
                        ]
                    },
                    "VpcId": {
                        "Ref": "VPCID"
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/redshift.json"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "CognitoStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "CognitoUserPoolName": {
                        "Ref": "CognitoUserPoolName"
                    },
                    "CognitoUserPoolClientName": {
                        "Ref": "CognitoUserPoolClientName"
                    },
                    "CognitoIdentityPoolName": {
                        "Ref": "CognitoIdentityPoolName"
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/cognito.json"
                }
            }
        },
        "GlueStack": {
            "Properties": {
                "Parameters": {
                    "AWSGlueCuratedDatasetsCrawlerRoleName": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.GlueRoleName"
                        ]
                    },
                    "AWSGlueJobRoleName": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.GlueRoleName"
                        ]
                    },
                    "BucketRaw": {
                        "Ref": "RawBucket"
                    },
                    "BucketTransformed": {
                        "Ref": "TransformedDatasets"
                    },
                    "BucketPublished": {
                        "Ref": "PublishedData"
                    },
                    "LogsBucket": {
                        "Ref": "LogsBucket"
                    },
                    "RedshiftPassword": {
                        "Ref": "RedshiftPassword"
                    },
                    "RedshiftUsername": {
                        "Ref": "RedshiftUsername"
                    },
                    "DatabaseName": {
                        "Ref": "RedshiftDatabaseName"
                    },
                    "DatabasePort": {
                        "Ref": "RedshiftDatabasePort"
                    },
                    "ConnectionURL": {
                        "Fn::GetAtt": [
                            "RedshiftStack",
                            "Outputs.ConnectionURL"
                        ]
                    },
                    "HostURL": {
                        "Fn::GetAtt": [
                            "RedshiftStack",
                            "Outputs.HostURL"
                        ]
                    },
                    "RedshiftRoleARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.RedshiftRoleARN"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/glue.json"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        },
        "kinsesisStack": {
            "Properties": {
                "Parameters": {
                    "RawFirehoseBucket": {
                        "Ref": "RawBucket"
                    },
                    "TransformedFirehoseBucket": {
                        "Ref": "TransformedDatasets"
                    },
                    "ReferenceDataSourceFileKey": {
                        "Ref": "ReferenceDataSourceFileKey"
                    },
                    "KinesisApplication1Name": {
                        "Ref": "KinesisApplication1Name"
                    },
                    "KinesisApplication2Name": {
                        "Ref": "KinesisApplication2Name"
                    },
                    "Firehose1Name": {
                        "Ref": "Firehose1Name"
                    },
                    "Firehose2Name": {
                        "Ref": "Firehose2Name"
                    },
                    "Firehose3Name": {
                        "Ref": "Firehose3Name"
                    },
                    "Firehose4Name": {
                        "Ref": "Firehose4Name"
                    },
                    "Firehose5Name": {
                        "Ref": "Firehose5Name"
                    },
                    "RedshiftConnectionURL": {
                        "Fn::GetAtt": [
                            "RedshiftStack",
                            "Outputs.ConnectionURL"
                        ]
                    },
                    "RedshiftPassword": {
                        "Ref": "RedshiftPassword"
                    },
                    "RedshiftUsername": {
                        "Ref": "RedshiftUsername"
                    },
                    "ElasticSearchDomianARN": {
                        "Ref": "ElasticSearchDomianARN"
                    },
                    "KinesisReferenceDataSourceRoleARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.KinesisReferenceDataSourceRoleARN"
                        ]
                    },
                    "KinesisAnalyticsApplicationRoleARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.KinesisAnalyticsApplicationRoleARN"
                        ]
                    },
                    "FirehoseDeliveryRoleARN": {
                        "Fn::GetAtt": [
                            "IAMRolesStack",
                            "Outputs.FirehoseDeliveryRoleARN"
                        ]
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}/kinesis.json"
                }
            },
            "Type": "AWS::CloudFormation::Stack"
        }
    },
    "Outputs": {
        "RedshiftJDBCEndpoint": {
            "Description": "Redshift JDBC Endpoint",
            "Value": {
                "Fn::GetAtt": [
                    "RedshiftStack",
                    "Outputs.ConnectionURL"
                ]
            }
        },
        "kinesisLambdaS3RoleARN": {
            "Value": {
                "Fn::GetAtt": [
                    "IAMRolesStack",
                    "Outputs.kinesisLambdaS3RoleARN"
                ]
            }
        },
        "CognitoUserPoolId": {
            "Value": {
                "Fn::GetAtt": [
                    "CognitoStack",
                    "Outputs.UserPoolId"
                ]
            }
        },
        "CognitoUserPoolClientID": {
            "Value": {
                "Fn::GetAtt": [
                    "CognitoStack",
                    "Outputs.UserPoolClient"
                ]
            }
        },
        "CognitoIdentityPoolId": {
            "Value": {
                "Fn::GetAtt": [
                    "CognitoStack",
                    "Outputs.IdentityPoolId"
                ]
            }
        },
        "CognitoUserPoolProviderName": {
            "Value": {
                "Fn::GetAtt": [
                    "CognitoStack",
                    "Outputs.UserPoolProviderName"
                ]
            }
        },
        "CognitoUserPoolARN": {
            "Value": {
                "Fn::GetAtt": [
                    "CognitoStack",
                    "Outputs.UserPoolARN"
                ]
            }
        },
        "CognitoUserPoolName": {
            "Value": {
                "Fn::GetAtt": [
                    "CognitoStack",
                    "Outputs.UserPoolName"
                ]
            }
        },
        "KinesisApplication1Name": {
            "Value": {
                "Fn::GetAtt": [
                    "kinsesisStack",
                    "Outputs.KinesisAnalyticalApplication1"
                ]
            }
        },
        "KinesisApplication2Name": {
            "Value": {
                "Fn::GetAtt": [
                    "kinsesisStack",
                    "Outputs.KinesisAnalyticalApplication2"
                ]
            }
        },
        "Firehose1": {
            "Value": {
                "Fn::GetAtt": [
                    "kinsesisStack",
                    "Outputs.Firehose1"
                ]
            }
        },
        "Firehose2": {
            "Value": {
                "Fn::GetAtt": [
                    "kinsesisStack",
                    "Outputs.Firehose2"
                ]
            }
        },
        "Firehose3": {
            "Value": {
                "Fn::GetAtt": [
                    "kinsesisStack",
                    "Outputs.Firehose3"
                ]
            }
        },
        "Firehose4": {
            "Value": {
                "Fn::GetAtt": [
                    "kinsesisStack",
                    "Outputs.Firehose4"
                ]
            }
        },
        "Firehose5": {
            "Value": {
                "Fn::GetAtt": [
                    "kinsesisStack",
                    "Outputs.Firehose5"
                ]
            }
        },
        "RawCrawler": {
            "Value": {
                "Fn::GetAtt": [
                    "GlueStack",
                    "Outputs.RawCrawler"
                ]
            }
        },
        "TransformedCrawler": {
            "Value": {
                "Fn::GetAtt": [
                    "GlueStack",
                    "Outputs.TransformedCrawler"
                ]
            }
        },
        "PublishedCrawler": {
            "Value": {
                "Fn::GetAtt": [
                    "GlueStack",
                    "Outputs.PublishedCrawler"
                ]
            }
        },
        "RedshiftCrawler": {
            "Value": {
                "Fn::GetAtt": [
                    "GlueStack",
                    "Outputs.RedshiftCrawler"
                ]
            }
        },
        "RawToTransformedJob": {
            "Value": {
                "Fn::GetAtt": [
                    "GlueStack",
                    "Outputs.RawToTransformedJob"
                ]
            }
        },
        "TransformedToPublishedJob": {
            "Value": {
                "Fn::GetAtt": [
                    "GlueStack",
                    "Outputs.TransformedToPublishedJob"
                ]
            }
        },
        "TransformedToRedshiftJob": {
            "Value": {
                "Fn::GetAtt": [
                    "GlueStack",
                    "Outputs.TransformedToRedshiftJob"
                ]
            }
        },
        "RedshiftAnalyticsQueriesJob": {
            "Value": {
                "Fn::GetAtt": [
                    "GlueStack",
                    "Outputs.RedshiftAnalyticsQueriesJob"
                ]
            }
        },
        "RedshiftToTransformedJob": {
            "Value": {
                "Fn::GetAtt": [
                    "GlueStack",
                    "Outputs.RedshiftToTransformedJob"
                ]
            }
        },
        "RedshiftSpectrumCreateExternalSchemaJob": {
            "Value": {
                "Fn::GetAtt": [
                    "GlueStack",
                    "Outputs.RedshiftSpectrumCreateExternalSchemaJob"
                ]
            }
        },
        "ConnectionURL": {
            "Value": {
                "Fn::GetAtt": [
                    "RedshiftStack",
                    "Outputs.ConnectionURL"
                ]
            }
        }
    }
}