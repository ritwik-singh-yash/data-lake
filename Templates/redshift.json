{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates a RedShift cluster within a VPC.  **WARNING** This template creates an Amazon Redshift cluster of the size and instance type that you specify. You will be billed for the AWS resources used if you create a stack from this template. (qs-1nlkhq1p3)",
    "Parameters": {
        "DatabaseName": {
            "Description": "Redshift database name",
            "Type": "String"
        },
        "DatabasePort": {
            "Default": "5439",
            "Description": "The port that Amazon Redshift will listen on, which will be allowed through the security group.",
            "Type": "String"
        },
        "NodeType": {
            "AllowedValues": [
                "dw1.xlarge",
                "dw1.8xlarge",
                "dw2.large",
                "dw2.8xlarge",
                "dc1.large",
                "dc2.large",
                "dc1.8xlarge",
                "ds1.xlarge",
                "ds1.8xlarge",
                "ds2.xlarge",
                "ds2.8xlarge"
            ],
            "ConstraintDescription": "must be a valid RedShift node type.",
            "Default": "dc1.large",
            "Description": "The node type to be provisioned for the redshift cluster",
            "Type": "String"
        },
        "NumberOfNodes": {
            "Default": "1",
            "Description": "The number of compute nodes in the redshift cluster.",
            "Type": "Number"
        },
        "PubliclyAccessible": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "false",
            "Description": "Indicates whether the cluster can be accessed from a public network.",
            "Type": "String"
        },
        "RedshiftRoleARN": {
            "Description": "RedshiftRole ARN",
            "Type": "String"
        },
        "RedshiftInboundCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(0|1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/0 or 16-28",
            "Description": "CIDR block that gets access to Redshift",
            "Type": "String"
        },
        "RedshiftPassword": {
            "Description": "The password that is associated with the master user account for the cluster that is being created.",
            "NoEcho": "true",
            "Type": "String"
        },
        "RedshiftUsername": {
            "Description": "The user name that is associated with the master user account for the cluster that is being created",
            "Type": "String"
        },
        "SubnetId1": {
            "Description": "Redshift subnet id 1.",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "SubnetId2": {
            "Description": "Redshift subnet id 2.",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "VpcId": {
            "Description": "VPC id.",
            "Type": "AWS::EC2::VPC::Id"
        }
    },
    "Conditions": {
        "IsMultiNodeCluster": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumberOfNodes"
                        },
                        "1"
                    ]
                }
            ]
        },
        "IsPublic": {
            "Fn::Equals": [
                {
                    "Ref": "PubliclyAccessible"
                },
                "true"
            ]
        }
    },
    "Resources": {
        "RedshiftCluster": {
            "Properties": {
                "ClusterSubnetGroupName": {
                    "Ref": "RedshiftClusterSubnetGroup"
                },
                "ClusterType": {
                    "Fn::If": [
                        "IsMultiNodeCluster",
                        "multi-node",
                        "single-node"
                    ]
                },
                "DBName": {
                    "Ref": "DatabaseName"
                },
                "IamRoles": [
                    {
                        "Ref": "RedshiftRoleARN"
                    }
                ],
                "MasterUserPassword": {
                    "Ref": "RedshiftPassword"
                },
                "MasterUsername": {
                    "Ref": "RedshiftUsername"
                },
                "NodeType": {
                    "Ref": "NodeType"
                },
                "NumberOfNodes": {
                    "Fn::If": [
                        "IsMultiNodeCluster",
                        {
                            "Ref": "NumberOfNodes"
                        },
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "Port": {
                    "Ref": "DatabasePort"
                },
                "PubliclyAccessible": {
                    "Fn::If": [
                        "IsPublic",
                        "true",
                        {
                            "Ref": "AWS::NoValue"
                        }
                    ]
                },
                "VpcSecurityGroupIds": [
                    {
                        "Ref": "RedshiftSecurityGroup"
                    }
                ]
            },
            "Type": "AWS::Redshift::Cluster"
        },
        "RedshiftClusterSubnetGroup": {
            "Properties": {
                "Description": "Cluster subnet group",
                "SubnetIds": [
                    {
                        "Ref": "SubnetId1"
                    },
                    {
                        "Ref": "SubnetId2"
                    }
                ]
            },
            "Type": "AWS::Redshift::ClusterSubnetGroup"
        },
        "RedshiftSecurityGroup": {
            "Properties": {
                "GroupDescription": "Enable JDBC port",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "RedshiftInboundCIDR"
                        },
                        "FromPort": {
                            "Ref": "DatabasePort"
                        },
                        "IpProtocol": "tcp",
                        "ToPort": {
                            "Ref": "DatabasePort"
                        }
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "0",
                        "IpProtocol": "-1",
                        "ToPort": "65535"
                    }
                ],
                "VpcId": {
                    "Ref": "VpcId"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        }
    },
    "Outputs": {
        "ConnectionURL": {
            "Description": "Cluster endpoint",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "jdbc:redshift://",
                        {
                            "Fn::GetAtt": [
                                "RedshiftCluster",
                                "Endpoint.Address"
                            ]
                        },
                        ":",
                        {
                            "Fn::GetAtt": [
                                "RedshiftCluster",
                                "Endpoint.Port"
                            ]
                        },
                        "/",
                        {
                            "Ref": "DatabaseName"
                        }
                    ]
                ]
            }
        },
        "HostURL": {
            "Description": "Host endpoint",
            "Value": {
                "Fn::GetAtt": [
                    "RedshiftCluster",
                    "Endpoint.Address"
                ]
            }
        }
    }
}